Search.setIndex({"alltitles": {"Indices and tables": [[0, "indices-and-tables"]], "MCintegration documentation": [[0, null]], "Module contents": [[2, "module-contents"]], "Submodules": [[2, "submodules"]], "base module": [[2, "module-base"]], "base_test module": [[2, "module-base_test"]], "integrators module": [[2, "module-integrators"]], "integrators_test module": [[2, "module-integrators_test"]], "maps module": [[2, "module-maps"]], "maps_test module": [[2, "module-maps_test"]], "mc_test module": [[2, "module-mc_test"]], "src": [[1, null]], "src package": [[2, null]], "utils module": [[2, "module-utils"]], "utils_test module": [[2, "module-utils_test"]], "vegas_test module": [[2, "module-vegas_test"]]}, "docnames": ["index", "modules", "src"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["index.rst", "modules.rst", "src.rst"], "indexentries": {"adapt() (maps.vegas method)": [[2, "maps.Vegas.adapt", false]], "add() (utils.ravg method)": [[2, "utils.RAvg.add", false]], "add_training_data() (maps.vegas method)": [[2, "maps.Vegas.add_training_data", false]], "avg_neval (utils.ravg property)": [[2, "utils.RAvg.avg_neval", false]], "base": [[2, "module-base", false]], "base_test": [[2, "module-base_test", false]], "basedistribution (class in base)": [[2, "base.BaseDistribution", false]], "chi2 (utils.ravg property)": [[2, "utils.RAvg.chi2", false]], "clear() (maps.vegas method)": [[2, "maps.Vegas.clear", false]], "compositemap (class in maps)": [[2, "maps.CompositeMap", false]], "converged() (utils.ravg method)": [[2, "utils.RAvg.converged", false]], "dof (utils.ravg property)": [[2, "utils.RAvg.dof", false]], "extend() (utils.ravg method)": [[2, "utils.RAvg.extend", false]], "extract_grid() (maps.vegas method)": [[2, "maps.Vegas.extract_grid", false]], "forward() (maps.compositemap method)": [[2, "maps.CompositeMap.forward", false]], "forward() (maps.linear method)": [[2, "maps.Linear.forward", false]], "forward() (maps.map method)": [[2, "maps.Map.forward", false]], "forward() (maps.vegas method)": [[2, "maps.Vegas.forward", false]], "func() (in module vegas_test)": [[2, "vegas_test.func", false]], "gaussian() (in module integrators)": [[2, "integrators.gaussian", false]], "get_device() (in module utils)": [[2, "utils.get_device", false]], "half_sphere_integrand() (in module mc_test)": [[2, "mc_test.half_sphere_integrand", false]], "integrand_list() (in module mc_test)": [[2, "mc_test.integrand_list", false]], "integrand_list1() (in module mc_test)": [[2, "mc_test.integrand_list1", false]], "integrand_list1() (in module vegas_test)": [[2, "vegas_test.integrand_list1", false]], "integrator (class in integrators)": [[2, "integrators.Integrator", false]], "integrators": [[2, "module-integrators", false]], "integrators_test": [[2, "module-integrators_test", false]], "inverse() (maps.compositemap method)": [[2, "maps.CompositeMap.inverse", false]], "inverse() (maps.linear method)": [[2, "maps.Linear.inverse", false]], "inverse() (maps.map method)": [[2, "maps.Map.inverse", false]], "inverse() (maps.vegas method)": [[2, "maps.Vegas.inverse", false]], "linear (class in maps)": [[2, "maps.Linear", false]], "make_uniform() (maps.vegas method)": [[2, "maps.Vegas.make_uniform", false]], "map (class in maps)": [[2, "maps.Map", false]], "maps": [[2, "module-maps", false]], "maps_test": [[2, "module-maps_test", false]], "mc_test": [[2, "module-mc_test", false]], "mcmc (class in integrators)": [[2, "integrators.MCMC", false]], "module": [[2, "module-base", false], [2, "module-base_test", false], [2, "module-integrators", false], [2, "module-integrators_test", false], [2, "module-maps", false], [2, "module-maps_test", false], [2, "module-mc_test", false], [2, "module-utils", false], [2, "module-utils_test", false], [2, "module-vegas_test", false]], "montecarlo (class in integrators)": [[2, "integrators.MonteCarlo", false]], "nitn (utils.ravg property)": [[2, "utils.RAvg.nitn", false]], "q (utils.ravg property)": [[2, "utils.RAvg.Q", false]], "random_walk() (in module integrators)": [[2, "integrators.random_walk", false]], "ravg (class in utils)": [[2, "utils.RAvg", false]], "sample() (base.basedistribution method)": [[2, "base.BaseDistribution.sample", false]], "sample() (base.uniform method)": [[2, "base.Uniform.sample", false]], "sample() (integrators.integrator method)": [[2, "integrators.Integrator.sample", false]], "set_seed() (in module utils)": [[2, "utils.set_seed", false]], "setup() (base_test.testbasedistribution method)": [[2, "base_test.TestBaseDistribution.setUp", false]], "setup() (base_test.testuniform method)": [[2, "base_test.TestUniform.setUp", false]], "setup() (integrators_test.testintegrator method)": [[2, "integrators_test.TestIntegrator.setUp", false]], "setup() (integrators_test.testmcmc method)": [[2, "integrators_test.TestMCMC.setUp", false]], "setup() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.setUp", false]], "setup() (maps_test.testcompositemap method)": [[2, "maps_test.TestCompositeMap.setUp", false]], "setup() (maps_test.testlinear method)": [[2, "maps_test.TestLinear.setUp", false]], "setup() (maps_test.testmap method)": [[2, "maps_test.TestMap.setUp", false]], "setup() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.setUp", false]], "setup() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.setUp", false]], "sharp_peak() (in module mc_test)": [[2, "mc_test.sharp_peak", false]], "sharp_peak() (in module vegas_test)": [[2, "vegas_test.sharp_peak", false]], "summary() (utils.ravg method)": [[2, "utils.RAvg.summary", false]], "teardown() (base_test.testbasedistribution method)": [[2, "base_test.TestBaseDistribution.tearDown", false]], "teardown() (base_test.testuniform method)": [[2, "base_test.TestUniform.tearDown", false]], "teardown() (integrators_test.testmcmc method)": [[2, "integrators_test.TestMCMC.tearDown", false]], "teardown() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.tearDown", false]], "teardown() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.tearDown", false]], "teardown() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.tearDown", false]], "test_adapt() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.test_adapt", false]], "test_add_training_data() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.test_add_training_data", false]], "test_add_unweighted() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_add_unweighted", false]], "test_add_weighted() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_add_weighted", false]], "test_avg_neval() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_avg_neval", false]], "test_call_invalid_output_type() (integrators_test.testmcmc method)": [[2, "integrators_test.TestMCMC.test_call_invalid_output_type", false]], "test_call_invalid_output_type() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.test_call_invalid_output_type", false]], "test_call_multiple_tensor_output() (integrators_test.testmcmc method)": [[2, "integrators_test.TestMCMC.test_call_multiple_tensor_output", false]], "test_call_multiple_tensor_output() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.test_call_multiple_tensor_output", false]], "test_call_single_tensor_output() (integrators_test.testmcmc method)": [[2, "integrators_test.TestMCMC.test_call_single_tensor_output", false]], "test_call_single_tensor_output() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.test_call_single_tensor_output", false]], "test_call_with_cuda() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.test_call_with_cuda", false]], "test_call_with_different_bounds() (integrators_test.testmcmc method)": [[2, "integrators_test.TestMCMC.test_call_with_different_bounds", false]], "test_call_with_different_bounds() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.test_call_with_different_bounds", false]], "test_call_with_different_device() (integrators_test.testmcmc method)": [[2, "integrators_test.TestMCMC.test_call_with_different_device", false]], "test_call_with_different_dtype() (integrators_test.testmcmc method)": [[2, "integrators_test.TestMCMC.test_call_with_different_dtype", false]], "test_call_with_different_dtype() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.test_call_with_different_dtype", false]], "test_call_with_different_proposal_dist() (integrators_test.testmcmc method)": [[2, "integrators_test.TestMCMC.test_call_with_different_proposal_dist", false]], "test_chi2() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_chi2", false]], "test_clear() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.test_clear", false]], "test_converged() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_converged", false]], "test_distribute_gvars() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_distribute_gvars", false]], "test_dof() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_dof", false]], "test_edge_cases() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.test_edge_cases", false]], "test_extend() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_extend", false]], "test_extract_grid() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.test_extract_grid", false]], "test_forward() (maps_test.testcompositemap method)": [[2, "maps_test.TestCompositeMap.test_forward", false]], "test_forward() (maps_test.testlinear method)": [[2, "maps_test.TestLinear.test_forward", false]], "test_forward() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.test_forward", false]], "test_forward_not_implemented() (maps_test.testmap method)": [[2, "maps_test.TestMap.test_forward_not_implemented", false]], "test_init_unweighted() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_init_unweighted", false]], "test_init_weighted() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_init_weighted", false]], "test_init_with_bounds() (integrators_test.testintegrator method)": [[2, "integrators_test.TestIntegrator.test_init_with_bounds", false]], "test_init_with_empty_maps() (maps_test.testcompositemap method)": [[2, "maps_test.TestCompositeMap.test_init_with_empty_maps", false]], "test_init_with_invalid_bounds() (base_test.testbasedistribution method)": [[2, "base_test.TestBaseDistribution.test_init_with_invalid_bounds", false]], "test_init_with_invalid_bounds() (integrators_test.testintegrator method)": [[2, "integrators_test.TestIntegrator.test_init_with_invalid_bounds", false]], "test_init_with_invalid_bounds() (maps_test.testmap method)": [[2, "maps_test.TestMap.test_init_with_invalid_bounds", false]], "test_init_with_list() (base_test.testbasedistribution method)": [[2, "base_test.TestBaseDistribution.test_init_with_list", false]], "test_init_with_list() (base_test.testuniform method)": [[2, "base_test.TestUniform.test_init_with_list", false]], "test_init_with_list() (maps_test.testmap method)": [[2, "maps_test.TestMap.test_init_with_list", false]], "test_init_with_maps() (integrators_test.testintegrator method)": [[2, "integrators_test.TestIntegrator.test_init_with_maps", false]], "test_init_with_mismatched_dtype() (integrators_test.testintegrator method)": [[2, "integrators_test.TestIntegrator.test_init_with_mismatched_dtype", false]], "test_init_with_tensor() (base_test.testbasedistribution method)": [[2, "base_test.TestBaseDistribution.test_init_with_tensor", false]], "test_init_with_tensor() (base_test.testuniform method)": [[2, "base_test.TestUniform.test_init_with_tensor", false]], "test_init_with_tensor() (maps_test.testmap method)": [[2, "maps_test.TestMap.test_init_with_tensor", false]], "test_initialization() (integrators_test.testmcmc method)": [[2, "integrators_test.TestMCMC.test_initialization", false]], "test_initialization() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.test_initialization", false]], "test_initialization() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.test_initialization", false]], "test_inverse() (maps_test.testcompositemap method)": [[2, "maps_test.TestCompositeMap.test_inverse", false]], "test_inverse() (maps_test.testlinear method)": [[2, "maps_test.TestLinear.test_inverse", false]], "test_inverse() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.test_inverse", false]], "test_inverse_not_implemented() (maps_test.testmap method)": [[2, "maps_test.TestMap.test_inverse_not_implemented", false]], "test_make_uniform() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.test_make_uniform", false]], "test_multiply_by_jacobian_multiple_tensors() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.test_multiply_by_jacobian_multiple_tensors", false]], "test_multiply_by_jacobian_single_tensor() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.test_multiply_by_jacobian_single_tensor", false]], "test_nitn() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_nitn", false]], "test_nothing() (in module mc_test)": [[2, "mc_test.test_nothing", false]], "test_q() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_Q", false]], "test_reduce_ex() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_reduce_ex", false]], "test_remove_gvars() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_remove_gvars", false]], "test_sample_method() (integrators_test.testmontecarlo method)": [[2, "integrators_test.TestMonteCarlo.test_sample_method", false]], "test_sample_not_implemented() (base_test.testbasedistribution method)": [[2, "base_test.TestBaseDistribution.test_sample_not_implemented", false]], "test_sample_with_maps() (integrators_test.testintegrator method)": [[2, "integrators_test.TestIntegrator.test_sample_with_maps", false]], "test_sample_with_single_sample() (base_test.testuniform method)": [[2, "base_test.TestUniform.test_sample_with_single_sample", false]], "test_sample_with_zero_samples() (base_test.testuniform method)": [[2, "base_test.TestUniform.test_sample_with_zero_samples", false]], "test_sample_within_bounds() (base_test.testuniform method)": [[2, "base_test.TestUniform.test_sample_within_bounds", false]], "test_sample_without_maps() (integrators_test.testintegrator method)": [[2, "integrators_test.TestIntegrator.test_sample_without_maps", false]], "test_summary() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_summary", false]], "test_train() (maps_test.testvegas method)": [[2, "maps_test.TestVegas.test_train", false]], "test_update() (utils_test.testravg method)": [[2, "utils_test.TestRAvg.test_update", false]], "testbasedistribution (class in base_test)": [[2, "base_test.TestBaseDistribution", false]], "testcompositemap (class in maps_test)": [[2, "maps_test.TestCompositeMap", false]], "testintegrator (class in integrators_test)": [[2, "integrators_test.TestIntegrator", false]], "testlinear (class in maps_test)": [[2, "maps_test.TestLinear", false]], "testmap (class in maps_test)": [[2, "maps_test.TestMap", false]], "testmcmc (class in integrators_test)": [[2, "integrators_test.TestMCMC", false]], "testmontecarlo (class in integrators_test)": [[2, "integrators_test.TestMonteCarlo", false]], "testravg (class in utils_test)": [[2, "utils_test.TestRAvg", false]], "testuniform (class in base_test)": [[2, "base_test.TestUniform", false]], "testvegas (class in maps_test)": [[2, "maps_test.TestVegas", false]], "train() (maps.vegas method)": [[2, "maps.Vegas.train", false]], "uniform (class in base)": [[2, "base.Uniform", false]], "uniform() (in module integrators)": [[2, "integrators.uniform", false]], "unit_circle_integrand() (in module mc_test)": [[2, "mc_test.unit_circle_integrand", false]], "update() (utils.ravg method)": [[2, "utils.RAvg.update", false]], "utils": [[2, "module-utils", false]], "utils_test": [[2, "module-utils_test", false]], "vegas (class in maps)": [[2, "maps.Vegas", false]], "vegas_test": [[2, "module-vegas_test", false]]}, "objects": {"": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "base_test"], [2, 0, 0, "-", "integrators"], [2, 0, 0, "-", "integrators_test"], [2, 0, 0, "-", "maps"], [2, 0, 0, "-", "maps_test"], [2, 0, 0, "-", "mc_test"], [2, 0, 0, "-", "utils"], [2, 0, 0, "-", "utils_test"], [2, 0, 0, "-", "vegas_test"]], "base": [[2, 1, 1, "", "BaseDistribution"], [2, 1, 1, "", "Uniform"]], "base.BaseDistribution": [[2, 2, 1, "", "sample"]], "base.Uniform": [[2, 2, 1, "", "sample"]], "base_test": [[2, 1, 1, "", "TestBaseDistribution"], [2, 1, 1, "", "TestUniform"]], "base_test.TestBaseDistribution": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "tearDown"], [2, 2, 1, "", "test_init_with_invalid_bounds"], [2, 2, 1, "", "test_init_with_list"], [2, 2, 1, "", "test_init_with_tensor"], [2, 2, 1, "", "test_sample_not_implemented"]], "base_test.TestUniform": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "tearDown"], [2, 2, 1, "", "test_init_with_list"], [2, 2, 1, "", "test_init_with_tensor"], [2, 2, 1, "", "test_sample_with_single_sample"], [2, 2, 1, "", "test_sample_with_zero_samples"], [2, 2, 1, "", "test_sample_within_bounds"]], "integrators": [[2, 1, 1, "", "Integrator"], [2, 1, 1, "", "MCMC"], [2, 1, 1, "", "MonteCarlo"], [2, 3, 1, "", "gaussian"], [2, 3, 1, "", "random_walk"], [2, 3, 1, "", "uniform"]], "integrators.Integrator": [[2, 2, 1, "", "sample"]], "integrators_test": [[2, 1, 1, "", "TestIntegrator"], [2, 1, 1, "", "TestMCMC"], [2, 1, 1, "", "TestMonteCarlo"]], "integrators_test.TestIntegrator": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "test_init_with_bounds"], [2, 2, 1, "", "test_init_with_invalid_bounds"], [2, 2, 1, "", "test_init_with_maps"], [2, 2, 1, "", "test_init_with_mismatched_dtype"], [2, 2, 1, "", "test_sample_with_maps"], [2, 2, 1, "", "test_sample_without_maps"]], "integrators_test.TestMCMC": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "tearDown"], [2, 2, 1, "", "test_call_invalid_output_type"], [2, 2, 1, "", "test_call_multiple_tensor_output"], [2, 2, 1, "", "test_call_single_tensor_output"], [2, 2, 1, "", "test_call_with_different_bounds"], [2, 2, 1, "", "test_call_with_different_device"], [2, 2, 1, "", "test_call_with_different_dtype"], [2, 2, 1, "", "test_call_with_different_proposal_dist"], [2, 2, 1, "", "test_initialization"]], "integrators_test.TestMonteCarlo": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "tearDown"], [2, 2, 1, "", "test_call_invalid_output_type"], [2, 2, 1, "", "test_call_multiple_tensor_output"], [2, 2, 1, "", "test_call_single_tensor_output"], [2, 2, 1, "", "test_call_with_cuda"], [2, 2, 1, "", "test_call_with_different_bounds"], [2, 2, 1, "", "test_call_with_different_dtype"], [2, 2, 1, "", "test_initialization"], [2, 2, 1, "", "test_multiply_by_jacobian_multiple_tensors"], [2, 2, 1, "", "test_multiply_by_jacobian_single_tensor"], [2, 2, 1, "", "test_sample_method"]], "maps": [[2, 1, 1, "", "CompositeMap"], [2, 1, 1, "", "Linear"], [2, 1, 1, "", "Map"], [2, 1, 1, "", "Vegas"]], "maps.CompositeMap": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "inverse"]], "maps.Linear": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "inverse"]], "maps.Map": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "inverse"]], "maps.Vegas": [[2, 2, 1, "", "adapt"], [2, 2, 1, "", "add_training_data"], [2, 2, 1, "", "clear"], [2, 2, 1, "", "extract_grid"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "inverse"], [2, 2, 1, "", "make_uniform"], [2, 2, 1, "", "train"]], "maps_test": [[2, 1, 1, "", "TestCompositeMap"], [2, 1, 1, "", "TestLinear"], [2, 1, 1, "", "TestMap"], [2, 1, 1, "", "TestVegas"]], "maps_test.TestCompositeMap": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "test_forward"], [2, 2, 1, "", "test_init_with_empty_maps"], [2, 2, 1, "", "test_inverse"]], "maps_test.TestLinear": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "test_forward"], [2, 2, 1, "", "test_inverse"]], "maps_test.TestMap": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "test_forward_not_implemented"], [2, 2, 1, "", "test_init_with_invalid_bounds"], [2, 2, 1, "", "test_init_with_list"], [2, 2, 1, "", "test_init_with_tensor"], [2, 2, 1, "", "test_inverse_not_implemented"]], "maps_test.TestVegas": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "tearDown"], [2, 2, 1, "", "test_adapt"], [2, 2, 1, "", "test_add_training_data"], [2, 2, 1, "", "test_clear"], [2, 2, 1, "", "test_edge_cases"], [2, 2, 1, "", "test_extract_grid"], [2, 2, 1, "", "test_forward"], [2, 2, 1, "", "test_initialization"], [2, 2, 1, "", "test_inverse"], [2, 2, 1, "", "test_make_uniform"], [2, 2, 1, "", "test_train"]], "mc_test": [[2, 3, 1, "", "half_sphere_integrand"], [2, 3, 1, "", "integrand_list"], [2, 3, 1, "", "integrand_list1"], [2, 3, 1, "", "sharp_peak"], [2, 3, 1, "", "test_nothing"], [2, 3, 1, "", "unit_circle_integrand"]], "utils": [[2, 1, 1, "", "RAvg"], [2, 3, 1, "", "get_device"], [2, 3, 1, "", "set_seed"]], "utils.RAvg": [[2, 4, 1, "", "Q"], [2, 2, 1, "", "add"], [2, 4, 1, "", "avg_neval"], [2, 4, 1, "", "chi2"], [2, 2, 1, "", "converged"], [2, 4, 1, "", "dof"], [2, 2, 1, "", "extend"], [2, 4, 1, "", "nitn"], [2, 2, 1, "", "summary"], [2, 2, 1, "", "update"]], "utils_test": [[2, 1, 1, "", "TestRAvg"]], "utils_test.TestRAvg": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "tearDown"], [2, 2, 1, "", "test_Q"], [2, 2, 1, "", "test_add_unweighted"], [2, 2, 1, "", "test_add_weighted"], [2, 2, 1, "", "test_avg_neval"], [2, 2, 1, "", "test_chi2"], [2, 2, 1, "", "test_converged"], [2, 2, 1, "", "test_distribute_gvars"], [2, 2, 1, "", "test_dof"], [2, 2, 1, "", "test_extend"], [2, 2, 1, "", "test_init_unweighted"], [2, 2, 1, "", "test_init_weighted"], [2, 2, 1, "", "test_nitn"], [2, 2, 1, "", "test_reduce_ex"], [2, 2, 1, "", "test_remove_gvars"], [2, 2, 1, "", "test_summary"], [2, 2, 1, "", "test_update"]], "vegas_test": [[2, 3, 1, "", "func"], [2, 3, 1, "", "integrand_list1"], [2, 3, 1, "", "sharp_peak"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "terms": {"": 2, "0": 2, "1": 2, "1000": 2, "10000": 2, "2": 2, "5": 2, "500": 2, "It": 2, "The": 2, "accumul": 2, "across": 2, "adapt": [1, 2], "adaptivemap": 2, "add": [1, 2], "add_training_data": [1, 2], "adjust": 2, "affect": 2, "after": 2, "afterward": 2, "all": 2, "along": 2, "alpha": 2, "although": 2, "ani": 2, "ar": 2, "arrai": 2, "assembl": 2, "atol": 2, "averag": 2, "avg_nev": [1, 2], "axi": 2, "base": 1, "base_test": 1, "basedistribut": [1, 2], "batchnorm": 2, "been": 2, "befor": 2, "behavior": 2, "bool": 2, "bound": 2, "call": 2, "can": 2, "care": 2, "case": 2, "caus": 2, "certain": 2, "chang": 2, "chi": 2, "chi2": [1, 2], "choos": 2, "class": 2, "clear": [1, 2], "compositemap": [1, 2], "comput": 2, "constant": 2, "content": [0, 1], "contigu": 2, "converg": [1, 2], "correspond": 2, "cpu": 2, "current": 2, "d": 2, "data": 2, "deconstruct": 2, "default": 2, "defin": 2, "degre": 2, "densiti": 2, "depend": 2, "design": 2, "detail": 2, "determin": 2, "devic": 2, "differ": 2, "dim": 2, "direct": 2, "displai": 2, "distribut": 2, "distriubt": 2, "do": 2, "document": 2, "doe": 2, "dof": [1, 2], "domain": 2, "draw": 2, "drawn": 2, "dropout": 2, "dtype": 2, "e": 2, "each": 2, "effect": 2, "encod": 2, "epoch": 2, "etc": 2, "evalu": 2, "everi": 2, "evolut": 2, "exercis": 2, "extend": [1, 2], "extract_grid": [1, 2], "f": 2, "fals": 2, "fixtur": 2, "float": 2, "float64": 2, "flow": 2, "former": 2, "forward": [1, 2], "freedom": 2, "from": 2, "func": [1, 2], "function": 2, "fval": 2, "g": 2, "gaussian": [1, 2], "get_devic": [1, 2], "good": 2, "grid": 2, "grow": 2, "gvar": 2, "ha": 2, "half_sphere_integrand": [1, 2], "handl": 2, "hook": 2, "i": 2, "idea": 2, "ignor": 2, "impli": 2, "increment": 2, "independ": 2, "index": 0, "inform": 2, "instanc": 2, "instead": 2, "int": 2, "integr": 1, "integrand": 2, "integrand_list": [1, 2], "integrand_list1": [1, 2], "integrators_test": 1, "invers": [1, 2], "iter": 2, "itn_result": 2, "j": 2, "kwarg": 2, "larg": 2, "larger": 2, "last_nev": 2, "later": 2, "latter": 2, "less": 2, "linear": [1, 2], "list": 2, "made": 2, "make_uniform": [1, 2], "map": 1, "maps_test": 1, "mc_test": 1, "mcmc": [1, 2], "mean": 2, "merg": 2, "method": 2, "methodnam": 2, "mode": 2, "model": 2, "modul": [0, 1], "montecarlo": [1, 2], "much": 2, "multivari": 2, "nbatch": 2, "nburnin": 2, "need": 2, "neval": 2, "ninc": 2, "nitn": [1, 2], "none": 2, "nsampl": 2, "num_sampl": 2, "number": 2, "object": 2, "one": 2, "onli": 2, "onto": 2, "option": 2, "order": 2, "otherwis": 2, "over": 2, "overridden": 2, "p": 2, "packag": 1, "page": 0, "paramet": 2, "particular": 2, "pass": 2, "per": 2, "perform": 2, "point": 2, "postiv": 2, "preserv": 2, "project": 2, "properti": 2, "q": [1, 2], "q0": 2, "random_walk": [1, 2], "rapid": 2, "ravg": [1, 2], "re": 2, "recip": 2, "region": 2, "regist": 2, "rel": 2, "result": 2, "return": 2, "rtol": 2, "run": 2, "runtest": 2, "sampl": [1, 2], "search": 0, "see": 2, "seed": 2, "self": 2, "set": 2, "set_se": [1, 2], "setup": [1, 2], "sharp_peak": [1, 2], "should": 2, "show": 2, "shrink": 2, "silent": 2, "sinc": 2, "slow": 2, "small": 2, "smaller": 2, "sourc": 2, "space": 2, "specifi": 2, "speed": 2, "string": 2, "subclass": 2, "submodul": 1, "sum_nev": 2, "summari": [1, 2], "take": 2, "target": 2, "task": 2, "teardown": [1, 2], "tensor": 2, "test": 2, "test_adapt": [1, 2], "test_add_training_data": [1, 2], "test_add_unweight": [1, 2], "test_add_weight": [1, 2], "test_avg_nev": [1, 2], "test_call_invalid_output_typ": [1, 2], "test_call_multiple_tensor_output": [1, 2], "test_call_single_tensor_output": [1, 2], "test_call_with_cuda": [1, 2], "test_call_with_different_bound": [1, 2], "test_call_with_different_devic": [1, 2], "test_call_with_different_dtyp": [1, 2], "test_call_with_different_proposal_dist": [1, 2], "test_chi2": [1, 2], "test_clear": [1, 2], "test_converg": [1, 2], "test_distribute_gvar": [1, 2], "test_dof": [1, 2], "test_edge_cas": [1, 2], "test_extend": [1, 2], "test_extract_grid": [1, 2], "test_forward": [1, 2], "test_forward_not_impl": [1, 2], "test_init_unweight": [1, 2], "test_init_weight": [1, 2], "test_init_with_bound": [1, 2], "test_init_with_empty_map": [1, 2], "test_init_with_invalid_bound": [1, 2], "test_init_with_list": [1, 2], "test_init_with_map": [1, 2], "test_init_with_mismatched_dtyp": [1, 2], "test_init_with_tensor": [1, 2], "test_initi": [1, 2], "test_invers": [1, 2], "test_inverse_not_impl": [1, 2], "test_make_uniform": [1, 2], "test_multiply_by_jacobian_multiple_tensor": [1, 2], "test_multiply_by_jacobian_single_tensor": [1, 2], "test_nitn": [1, 2], "test_noth": [1, 2], "test_q": [1, 2], "test_reduce_ex": [1, 2], "test_remove_gvar": [1, 2], "test_sample_method": [1, 2], "test_sample_not_impl": [1, 2], "test_sample_with_map": [1, 2], "test_sample_with_single_sampl": [1, 2], "test_sample_with_zero_sampl": [1, 2], "test_sample_within_bound": [1, 2], "test_sample_without_map": [1, 2], "test_summari": [1, 2], "test_train": [1, 2], "test_upd": [1, 2], "testbasedistribut": [1, 2], "testcas": 2, "testcompositemap": [1, 2], "testintegr": [1, 2], "testlinear": [1, 2], "testmap": [1, 2], "testmcmc": [1, 2], "testmontecarlo": [1, 2], "testravg": [1, 2], "testuniform": [1, 2], "testvega": [1, 2], "than": 2, "thei": 2, "them": 2, "thi": 2, "torch": 2, "train": [1, 2], "transform": 2, "true": 2, "type": 2, "typic": 2, "u": 2, "unchang": 2, "uniform": [1, 2], "unit_circle_integrand": [1, 2], "unless": 2, "unmodifi": 2, "unweight": 2, "up": 2, "updat": [1, 2], "us": 2, "usual": 2, "util": 1, "utils_test": 1, "vae": 2, "valu": 2, "var": 2, "variabl": 2, "vega": [1, 2], "vegas_test": 1, "weight": 2, "when": 2, "where": 2, "whether": 2, "which": 2, "while": 2, "within": 2, "x": 2}, "titles": ["MCintegration documentation", "src", "src package"], "titleterms": {"base": 2, "base_test": 2, "content": 2, "document": 0, "indic": 0, "integr": 2, "integrators_test": 2, "map": 2, "maps_test": 2, "mc_test": 2, "mcintegr": 0, "modul": 2, "packag": 2, "src": [1, 2], "submodul": 2, "tabl": 0, "util": 2, "utils_test": 2, "vegas_test": 2}})